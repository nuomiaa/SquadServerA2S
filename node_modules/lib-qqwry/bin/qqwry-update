#!/usr/bin/env node

const program = require('commander');
const chalk = require('chalk');
const path = require('path');
const libqqwry = require('../');
const qqwryUpdate = require('./lib/qqwryUpdate');

const readline = require('readline');

// rl.question('你如何看待 Node.js 中文网？', (answer) => {
//   // TODO：将答案记录在数据库中。
//   console.log(`感谢您的宝贵意见：${answer}`);

//   rl.close();
// });

const defDataPath = path.join(__dirname, '../data/qqwry.dat');

function isLatest(lastVersion, path = defDataPath) {
	let dataVersion = libqqwry(path).searchIP('255.255.255.255').Area;
	lastVersion = lastVersion.substr(lastVersion.indexOf(' ') + 1);
	return !!~dataVersion.indexOf(lastVersion);
}

async function main() {
	// let dataPath = program.args[0] || defDataPath;
	let dataPath = defDataPath;
	let { last, force, yes } = program.opts();
	let { version, key } = await qqwryUpdate.getLastInfo();
	if (last) {
		return console.log(version);
	}
	console.log('最新IP库信息:\n%s\n', version);
	if (!force && isLatest(version, dataPath)) {
		return console.log(chalk.yellow('当前IP库已是最新版本,无需更新!'));
	}
	let p = (() => {
		if (yes || force) return Promise.resolve();
		return new Promise((reslove, reject) => {
			let rl = readline.createInterface({
				input: process.stdin,
				output: process.stdout
			});
			rl.question('当前默认IP库文件较旧是否更新到最新IP库？(y/n)', answer => {
				rl.close();
				if (answer.match(/^y(es)?$/i)) {
					reslove();
				} else {
					reject();
				}
			});
		});
	})();
	return p.then(
		() => {
			return qqwryUpdate.update(dataPath, key).then(function() {
				console.log('更新完成!');
				// lc.close();
			});
		},
		()=>{
			console.log('更新已取消!')
		}
	);
}

program
	.name('update')
	// .usage('[dataPath] [options]')
	.usage('[options]')
	.description('更新IP库(qqwry.dat)')
	.option('-l, --last', '获取最新IP库信息')
	.option('-f, --force', '强制更新IP库')
	.option('-y, --yes', '直接更新IP库')
	.parse(process.argv);

main().catch(err => {
	// console.error(err);
	console.error(err.message || err);
});
